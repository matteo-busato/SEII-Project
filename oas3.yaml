openapi: 3.0.0
info:
  version: '1.0'
  title: "EasyMusic OpenAPI 3.0"
  description: API for managing artists and their discography.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  
  /users:
    post:
      description: >-
        Register a new user to the website as a simple user
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
            example:
              name: "John"
              email: "john@gmail.com"
              password: "5up3rS3cr3t4ndL0ngP4ssw0rd"
      responses:
        '201':
          description: 'User registered successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - 'User registered successfully'
        '400':
          description: 'Request Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - "The field 'name' must be a non-empty string"
                      - "The field 'email' must be a non-empty string"
                      - "The field 'password' must be a non-empty string"
                      - "Invalid email format"
        '409':
          description: 'Duplicated email'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - "This email is already registered"

  /artists:
    get:
      description: >-
        Gets the list of artists.
      summary: View all artists
      responses:
        '200':  
          description: 'Collection of artists'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
  
  /albums:
    get:
      description: >-
        Gets the list of albums.
      summary: View all albums
      responses:
        '200':
          description: 'Collection of albums'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
                  
  /merch:
    get:
      description: >-
        Gets the list of merch.
      summary: View all merch
      responses:
        '200':
          description: 'Collection of merch'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merch'
                  
  /events:
    get:
      description: >-
        Gets the list of events.
      summary: View all events
      responses:
        '200':
          description: 'Collection of events'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  
  /artists/:name:
    get:
      description: >-
        Gets the artist specified.
      summary: View an artist
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: 'information about an artist with 5 albums, 5 merch and 5 events'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Artist'
                  
  /albums/:ismn:
    get:
      description: >-
        Gets the album specified.
      summary: View an album
      parameters:
        - in: path
          name: ismn
          required: true
          type: string
      responses:
        '200':
          description: 'get all the information about the album selected by ismn'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Album'
                  
  /merch/:id:
    get:
      description: >-
        Gets the merch specified.
      summary: View a merch
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: 'get all the information about a merch selected by id'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Merch'
                  
  /events/:id:
    get:
      description: >-
        Gets the event specified.
      summary: View a event
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: 'get all the information about a event selected by id'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Event'
  
  /artists/:name/albums:
    get:
      description: >-
        Gets the list of albums of an artist :name.
      summary: View all events of an artist
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: 'Collection of albums of an artist'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
  
  /artists/:name/merch:
    get:
      description: >-
        Gets the list of merch of an artist :name.
      summary: View all merch of an artist
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: 'Collection of merch of an artist'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merch'
                  
  /artists/:name/events:
    get:
      description: >-
        Gets the list of events of an artist :name.
      summary: View all events of an artist
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: 'Collection of events of an artist'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  
  /artists/:name/albums/:ismn:
    get:
      description: >-
        Gets an album by its :ismn of an artist :name.
      summary: View :ismn album of artist :name
      parameters:
        - in: path
          name: name
          required: true
          type: string
        - in: path
          name: ismn
          required: true
          type: string
      responses:
        '200':
          description: 'album :ismn of the artist :name'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Album'        
   
  /artists/:name/merch/:id:
    get:
      description: >-
        Gets a merch by its :id of an artist :name.
      summary: View :id merch of artist :name
      parameters:
        - in: path
          name: name
          required: true
          type: string
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: 'merch :ismn of the artist :name'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Merch'  
  
  /artists/:name/events/:id:
    get:
      description: >-
        Gets a event by its :id of an artist :name.
      summary: View :id event of artist :name
      parameters:
        - in: path
          name: name
          required: true
          type: string
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: 'event :ismn of the artist :name'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Event'
                  
components:
  schemas:
    Artist:
      type: object
      required:
        - name
        - email
        - bio
      properties:
        name:
          type: string
          description: 'Name of the artist'
        email:
          type: string
          description: 'Email of the artist'
        bio:
          type: string
          description: 'bio of the artist'
      example:
        name: "system of a down"
        email: "SOAD@ofAdown.com"
        bio: "gruppo statunitense metal"
        
    Album:
      type: object
      required:
        - title
        - ISMN
        - year
        - genre
        - tracklist
        - cost
        - owner
      properties:
        title:
          type: string
          description: 'title of the album'
        ISMN:
          type: string
          description: 'ISMN code of the album'
        year:
          type: int
          description: 'year of the album'
        genre:
          type: string
          description: 'type of music album'
        tracklist:
          type: array
          description: 'the tracklist of the album'
        cost:
          type: float
          description: 'the cost of the album'
        owner:
          type: string
          description: 'the owner of the album'
      example:
        title: "tri ripetae"
        ISMN: "20304020uk32"
        year: 1995
        genre: "electronic/ambient"
        tracklist: {"track1":"track1","track2":"track2"}
        cost: 10.0
        owner: "Autechre"
        
    Event:
      type: object
      required:
        - title
        - ID
        - date
        - place
        - description
        - cost
        - owner
      properties:
        title:
          type: string
          description: 'Title of the event'
        ID:
          type: string
          description: 'ID of the event'
        date:
          type: string
          description: 'date of the event'
        place:
          type: string
          description: 'place of the event'
        description:
          type: string
          description: 'description of the event'
        cost:
          type: float
          description: 'cost of the event'
        owner:
          type: string
          description: 'owner of the event'
      example:
        title: "release Party"
        date: "10/10/21"
        place: "Turin"
        description: "reseal party for the new Autechre's album 'Sign'"
        cost: 35.0
        owner: "Autechre"
        
    Merch:
      type: object
      required:
        - title
        - ID
        - description
        - qty
        - cost
        - owner
      properties:
        title:
          type: string
          description: 'Title of the merch'
        ID:
          type: string
          description: 'ID of the merch'
        description:
          type: string
          description: 'info of the merch'
        qty:
          type: int
          description: 'number of available objects'
        cost:
          type: float
          description: 'cost of the merch'
        owner:
          type: string
          description: 'owner of the merch'
      example:
        title: "Sign album"
        ID: "432452"
        description: "new Autechre's album"
        qty: 500
        cost: 10.0
        owner: "Autechre"