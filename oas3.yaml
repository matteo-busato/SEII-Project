openapi: 3.0.0
info:
  version: '1.0'
  title: "EasyMusic OpenAPI 3.0"
  description: API for managing artists and their discography.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /artists:
    get:
      description: >-
        Gets the list of artists.
      summary: View all artists
      responses:
        '200':
          description: 'Collection of artists'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
  
  /artists/{artist-name}:
    get:
      description: >-
        Gets the artist specified.
      summary: View an artist
      parameters:
        - in: path
          name: name
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: 'information about an artist'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Artist'

  /events:
    get:
      description: >-
        Gets the list of events.
      summary: View all events
      responses:
        '200':
          description: 'Collection of events'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                  
  /artists/{artist-name}/events:
    get:
      description: >-
        Gets the list of events of an {artist-name}.
      summary: View all events of an artist
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Collection of events of an artist'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
      
  /merch:
    get:
      description: >-
        Gets the list of merch.
      summary: View all merch
      responses:
        '200':
          description: 'Collection of merch'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merch'
          
  /artists/{artist-name}/merch:
    get:
      description: >-
        Gets the list of merch of an {artist-name}.
      summary: View all merch of an artist
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Collection of merch of an artist'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merch'
      
  /artists/:name/albums:
    post:
      description: >-
        Allows to post a new album to the artist's discography
      summary: post new album
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: the artist's name
      requestBody:
        description: the album to be posted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '201':
          description: Album posted with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                     - 'The album has been correctly inserted in the db with ISMN = :ismn' 
        '400':
          description: Error on posting the album
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Artist not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - The artist :artist does not exist
        '500':
          description: Server error on posting the album
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - server error on finding the artist in the db, please retry
                      - server error searching for the ismn in the db, please retry
                      - server error on saving the album to the db, please retry

  /artists/:name/albums/:ismn:
    delete:
      description: >-
        Allows to delete an album in the artist's discography
      summary: delete album
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: the artist's name
        - in: path
          name: ismn
          required: true
          schema:
            type: string
          description: the album's ismn
      responses:
        '200':
          description: Album deleted with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - The album has been correctly deleted from the db
        '404':
          description: Album not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - this album does not exists
        '500':
          description: Server error on deleting the album
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - server error on deleting the album, please retry
                      - server error on searching the album in the db, please retry
    put:
      description: >-
        Allows to change an album's data in the artist's discography
      summary: change album data
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: the artist's name
        - in: path
          name: ismn
          required: true
          schema:
            type: string
          description: the album's ismn
      requestBody:
        description: the album's data to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '201':
          description: Album's data changed with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Album doesn't exit
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - error: this album does not exist in the db
        '500':
          description: Server error on searching the album on the db
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - error: server error on finding the album data in the db, please retry
                  
components:
  schemas:
    Artist:
      type: object
      required:
        - name
        - email
        - bio
      properties:
        name:
          type: string
          description: 'Name of the artist'
        email:
          type: string
          description: 'Email of the artist'
        bio:
          type: string
          description: 'bio of the artist'
      example:
        name: "system of a down"
        email: "fuckthesystem@ofAdown.com"
        bio: "gruppo USA/Armenia che fanno musica metal pazzerella"

    Album:
      type: object
      required:
        - ismn
        - title
        - artist
        - year
        - tracklist
        - cost 
      properties:
        ismn:
          type: number
          description: 'identifying ISMN of the album'
        title:
          type: string
          description: 'title of the album'
        artist:
          type: string
          description: 'artist of the album'
        year:
          type: number
          description: 'year of the album'
        tracklist:
          type: array
          items:
            type: string
          description: 'tacklist of the album'
        cost: 
          type: number
          description: 'cost of the album'
      example:
        ismn: 67196438
        title: "metal album 2"
        artist: "black sabbath"
        year: 1973
        tracklist: "track1, track2, track3"
        cost: 20

    Event:
      type: object
      required:
        - title
        - date
        - place
        - artist
      properties:
        title:
          type: string
          description: 'Title of the event'
        date:
          type: string
          description: 'date of the event'
        place:
          type: string
          description: 'place of the event'
        artist:
          type: string
          description: 'owner of the event'
      example:
        title: ""
        date: ""
        place: ""
        artist: ""
        
    Merch:
      type: object
      required:
        - title
        - info
        - cost
        - artist
      properties:
        title:
          type: string
          description: 'Title of the merch'
        info:
          type: string
          description: 'info of the merch'
        cost:
          type: number
          description: 'cost of the merch'
        artist:
          type: string
          description: 'owner of the merch'
      example:
        title: ""
        info: ""
        cost: ""
        artist: ""